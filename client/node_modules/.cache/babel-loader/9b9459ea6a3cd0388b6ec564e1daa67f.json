{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\coolm\\\\Store\\\\client\\\\src\\\\components\\\\TypeBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"../index\";\nimport Col from \"react-bootstrap/Col\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport { Button } from 'react-bootstrap';\nimport getRandomInt from './NavBar';\nimport Navbar from './NavBar';\nconst TypeBar = observer(_c = _s(() => {\n  _s();\n\n  const {\n    device\n  } = useContext(Context);\n  const {\n    coins\n  } = useContext(Context);\n\n  function onClick({\n    setCoins\n  }) {\n    const Tmp = () => {\n      setCoins(getRandomInt(50, 500));\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(ListGroup, {\n    children: device.types.map(type => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n      style: {\n        cursor: 'pointer'\n      },\n      active: type.id === device.selectedType.id,\n      async: true,\n      onClick: e => {\n        device.setSelectedType(type);\n        const tmp = coins.setCoins();\n        console.log(e.target.id);\n      },\n      id: type.id,\n      children: type.name\n    }, type.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}, \"q8YsOwiYBDl6TSPg0/zxHLYwvEs=\"));\n_c2 = TypeBar;\nexport default TypeBar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TypeBar$observer\");\n$RefreshReg$(_c2, \"TypeBar\");","map":{"version":3,"sources":["C:/Users/coolm/Store/client/src/components/TypeBar.js"],"names":["React","useContext","useState","observer","Context","Col","ListGroup","Button","getRandomInt","Navbar","TypeBar","device","coins","onClick","setCoins","Tmp","types","map","type","cursor","id","selectedType","e","setSelectedType","tmp","console","log","target","name"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,QAAR,QAAuB,iBAAvB;AACA,SAAQC,OAAR,QAAsB,UAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,OAAOC,YAAP,MAAyB,UAAzB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAQA,MAAMC,OAAO,GAAGP,QAAQ,SAAC,MAAM;AAAA;;AAC3B,QAAM;AAACQ,IAAAA;AAAD,MAAWV,UAAU,CAACG,OAAD,CAA3B;AACA,QAAM;AAACQ,IAAAA;AAAD,MAAUX,UAAU,CAACG,OAAD,CAA1B;;AACA,WAASS,OAAT,CAAiB;AAACC,IAAAA;AAAD,GAAjB,EAA4B;AACxB,UAAMC,GAAG,GAAG,MAAM;AAACD,MAAAA,QAAQ,CAACN,YAAY,CAAC,EAAD,EAAI,GAAJ,CAAb,CAAR;AAA+B,KAAlD;AACH;;AACD,sBACI,QAAC,SAAD;AAAA,cACKG,MAAM,CAACK,KAAP,CAAaC,GAAb,CAAiBC,IAAI,iBAClB,QAAC,SAAD,CAAW,IAAX;AACI,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAE;AAAT,OADX;AAEI,MAAA,MAAM,EAAED,IAAI,CAACE,EAAL,KAAYT,MAAM,CAACU,YAAP,CAAoBD,EAF5C;AAGI,MAAA,KAAK,MAHT;AAGU,MAAA,OAAO,EAAME,CAAD,IAAO;AACrBX,QAAAA,MAAM,CAACY,eAAP,CAAuBL,IAAvB;AAEA,cAAMM,GAAG,GACTZ,KAAK,CAACE,QAAN,EADA;AAEAW,QAAAA,OAAO,CAACC,GAAR,CAAYJ,CAAC,CAACK,MAAF,CAASP,EAArB;AACH,OATL;AAWI,MAAA,EAAE,EAAEF,IAAI,CAACE,EAXb;AAAA,gBAcKF,IAAI,CAACU;AAdV,OAUSV,IAAI,CAACE,EAVd;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH,CA9BuB,kCAAxB;MAAMV,O;AAgCN,eAAeA,OAAf","sourcesContent":["import React, {useContext,useState} from 'react';\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\nimport Col from \"react-bootstrap/Col\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport { Button } from 'react-bootstrap';\nimport getRandomInt from './NavBar';\nimport Navbar from './NavBar'\n\n\n\n\n    \n\n\nconst TypeBar = observer(() => {\n    const {device} = useContext(Context)\n    const {coins} = useContext(Context)\n    function onClick({setCoins}){\n        const Tmp = () => {setCoins(getRandomInt(50,500))}\n    }\n    return (\n        <ListGroup>\n            {device.types.map(type =>\n                <ListGroup.Item\n                    style={{cursor: 'pointer'}}\n                    active={type.id === device.selectedType.id}\n                    async onClick = { (e) => {\n                        device.setSelectedType(type)\n\n                        const tmp = \n                        coins.setCoins()\n                        console.log(e.target.id)\n                    }}\n                    key={type.id}\n                    id={type.id}\n\n                >\n                    {type.name}\n                </ListGroup.Item>\n                \n            )}\n        \n        </ListGroup>\n    );\n});\n\nexport default TypeBar;\n"]},"metadata":{},"sourceType":"module"}