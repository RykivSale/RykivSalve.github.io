{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\coolm\\\\Store\\\\client\\\\src\\\\components\\\\TypeBar.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"../index\";\nimport Col from \"react-bootstrap/Col\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport { Button } from 'react-bootstrap';\nimport getRandomInt from './NavBar';\n\nfunction CointCount() {\n  _s();\n\n  const [coins, setCoins] = useState(100);\n  return /*#__PURE__*/_jsxDEV(Button, {\n    variant: \"outline-light\",\n    className: \"ml-2\",\n    children: coins\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CointCount, \"m5+y4A45uyQdyQCZuQDuby5IOy0=\");\n\n_c = CointCount;\nconst TypeBar = observer(_c2 = _s2(() => {\n  _s2();\n\n  const {\n    device\n  } = useContext(Context);\n\n  function onClick({\n    setCoins\n  }) {\n    const Tmp = () => {\n      setCoins(getRandomInt(50, 500));\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(ListGroup, {\n    children: device.types.map(type => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n      style: {\n        cursor: 'pointer'\n      },\n      active: type.id === device.selectedType.id,\n      onClick: () => {\n        device.setSelectedType(type);\n        onClick();\n      },\n      children: type.name\n    }, type.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}, \"7NqvmAVKlrxWo1mWsul1uXNUccI=\"));\n_c3 = TypeBar;\nexport default TypeBar;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CointCount\");\n$RefreshReg$(_c2, \"TypeBar$observer\");\n$RefreshReg$(_c3, \"TypeBar\");","map":{"version":3,"sources":["C:/Users/coolm/Store/client/src/components/TypeBar.js"],"names":["React","useContext","useState","observer","Context","Col","ListGroup","Button","getRandomInt","CointCount","coins","setCoins","TypeBar","device","onClick","Tmp","types","map","type","cursor","id","selectedType","setSelectedType","name"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,QAAR,QAAuB,iBAAvB;AACA,SAAQC,OAAR,QAAsB,UAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,OAAOC,YAAP,MAAyB,UAAzB;;AAEA,SAASC,UAAT,GAAqB;AAAA;;AACjB,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBT,QAAQ,CAAC,GAAD,CAAjC;AACA,sBACI,QAAC,MAAD;AACoB,IAAA,OAAO,EAAE,eAD7B;AAEoB,IAAA,SAAS,EAAC,MAF9B;AAAA,cAIoBQ;AAJpB;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GAXQD,U;;KAAAA,U;AAkBT,MAAMG,OAAO,GAAGT,QAAQ,WAAC,MAAM;AAAA;;AAC3B,QAAM;AAACU,IAAAA;AAAD,MAAWZ,UAAU,CAACG,OAAD,CAA3B;;AAEA,WAASU,OAAT,CAAiB;AAACH,IAAAA;AAAD,GAAjB,EAA4B;AACxB,UAAMI,GAAG,GAAG,MAAM;AAACJ,MAAAA,QAAQ,CAACH,YAAY,CAAC,EAAD,EAAI,GAAJ,CAAb,CAAR;AAA+B,KAAlD;AACH;;AACD,sBACI,QAAC,SAAD;AAAA,cACKK,MAAM,CAACG,KAAP,CAAaC,GAAb,CAAiBC,IAAI,iBAClB,QAAC,SAAD,CAAW,IAAX;AACI,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAE;AAAT,OADX;AAEI,MAAA,MAAM,EAAED,IAAI,CAACE,EAAL,KAAYP,MAAM,CAACQ,YAAP,CAAoBD,EAF5C;AAGI,MAAA,OAAO,EAAK,MAAM;AACdP,QAAAA,MAAM,CAACS,eAAP,CAAuBJ,IAAvB;AACAJ,QAAAA,OAAO;AACV,OANL;AAAA,gBASKI,IAAI,CAACK;AATV,OAOSL,IAAI,CAACE,EAPd;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CAzBuB,kCAAxB;MAAMR,O;AA2BN,eAAeA,OAAf","sourcesContent":["import React, {useContext,useState} from 'react';\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\nimport Col from \"react-bootstrap/Col\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport { Button } from 'react-bootstrap';\nimport getRandomInt from './NavBar';\n\nfunction CointCount(){\n    const [coins,setCoins] = useState(100);\n    return (\n        <Button\n                            variant={\"outline-light\"}\n                            className=\"ml-2\"\n                        >\n                           {coins}\n                           \n                        </Button>\n      );\n}\n\n\n\n    \n\n\nconst TypeBar = observer(() => {\n    const {device} = useContext(Context)\n\n    function onClick({setCoins}){\n        const Tmp = () => {setCoins(getRandomInt(50,500))}\n    }\n    return (\n        <ListGroup>\n            {device.types.map(type =>\n                <ListGroup.Item\n                    style={{cursor: 'pointer'}}\n                    active={type.id === device.selectedType.id}\n                    onClick = { () => {\n                        device.setSelectedType(type)\n                        onClick()\n                    }}\n                    key={type.id}\n                >\n                    {type.name}\n                </ListGroup.Item>\n                \n            )}\n        \n        </ListGroup>\n    );\n});\n\nexport default TypeBar;\n"]},"metadata":{},"sourceType":"module"}